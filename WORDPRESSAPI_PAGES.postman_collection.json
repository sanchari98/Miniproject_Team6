{
	"info": {
		"_postman_id": "2e7bfa6e-729f-43fc-9e7d-19eefd5979a2",
		"name": "WORDPRESSAPI_PAGES",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "WordpressPage",
			"item": [
				{
					"name": "ReadAllpages",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckcaseSensitivity",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/WP/v2/PAGES",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"WP",
								"v2",
								"PAGES"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckforNonexistingpage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost/coredesign/wp-json/wp/v2/pages/ABC",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"coredesign",
								"wp-json",
								"wp",
								"v2",
								"pages",
								"ABC"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckStatuscodeofPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckResponsetime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 900ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "ChecSuccessfulPost",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "ChecStatuscodeName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has string\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate_id_of_pages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Positive validation of id\r",
									"pm.test(\"Id is matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(30);\r",
									"});\r",
									"//Negetive validation of id\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});\r",
									"\r",
									"\r",
									"pm.test(\"Id is not matched\",function(){\r",
									"    var jsonrep=pm.response.json();\r",
									"    pm.expect(jsonrep.id).to.eql(12);\r",
									"});\r",
									"\r",
									"var Ajv=require('ajv'),\r",
									"    ajv=new Ajv({logger:console});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate_string_in_body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Positive validation\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Pages\");\r",
									"});\r",
									"//Negetive Validation\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"SystemProp\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "Print_post_id_inConsole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Print the value of id in the console\r",
									"pm.test(\"Post id is printed in console\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(+jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreatePage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Wordpress",
									"type": "text"
								},
								{
									"key": "content",
									"value": "New wordpress document",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}",
							"host": [
								"{{HostName1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReadSinglePage",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Pages Updated",
									"type": "text"
								},
								{
									"key": "content",
									"value": "New Pages updated",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePage",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Pages Updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "content",
									"value": "New Pages updated",
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}/35",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"35"
							]
						}
					},
					"response": []
				},
				{
					"name": "SchemaValidationofPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var schema = {\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"date\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"date_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"guid\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"modified\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"modified_gmt\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"slug\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"link\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"title\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\"\r",
									"      ]\r",
									"    },\r",
									"    \"content\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"protected\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\",\r",
									"        \"protected\"\r",
									"      ]\r",
									"    },\r",
									"    \"excerpt\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"rendered\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"protected\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"rendered\",\r",
									"        \"protected\"\r",
									"      ]\r",
									"    },\r",
									"    \"author\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"featured_media\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"parent\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"menu_order\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"comment_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"ping_status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"template\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"meta\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"_links\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"self\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"collection\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"about\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"author\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"replies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"embeddable\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"embeddable\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"version-history\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"count\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"count\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"predecessor-version\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"id\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"id\",\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"wp:attachment\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"href\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        },\r",
									"        \"curies\": {\r",
									"          \"type\": \"array\",\r",
									"          \"items\": [\r",
									"            {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"name\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"href\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"templated\": {\r",
									"                  \"type\": \"boolean\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"name\",\r",
									"                \"href\",\r",
									"                \"templated\"\r",
									"              ]\r",
									"            }\r",
									"          ]\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"self\",\r",
									"        \"collection\",\r",
									"        \"about\",\r",
									"        \"author\",\r",
									"        \"replies\",\r",
									"        \"version-history\",\r",
									"        \"predecessor-version\",\r",
									"        \"wp:attachment\",\r",
									"        \"curies\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"date\",\r",
									"    \"date_gmt\",\r",
									"    \"guid\",\r",
									"    \"modified\",\r",
									"    \"modified_gmt\",\r",
									"    \"slug\",\r",
									"    \"status\",\r",
									"    \"type\",\r",
									"    \"link\",\r",
									"    \"title\",\r",
									"    \"content\",\r",
									"    \"excerpt\",\r",
									"    \"author\",\r",
									"    \"featured_media\",\r",
									"    \"parent\",\r",
									"    \"menu_order\",\r",
									"    \"comment_status\",\r",
									"    \"ping_status\",\r",
									"    \"template\",\r",
									"    \"meta\",\r",
									"    \"_links\"\r",
									"  ]\r",
									"};\r",
									"\r",
									"var jsonrepo=pm.response.json();\r",
									"\r",
									"pm.test('Schema is validated', function () {\r",
									"    pm.expect(tv4.validate(jsonrepo, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My Pages Updated",
									"type": "text"
								},
								{
									"key": "content",
									"value": "New Pages updated",
									"type": "text"
								},
								{
									"key": "status",
									"value": "publish",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HostName1}}/30",
							"host": [
								"{{HostName1}}"
							],
							"path": [
								"30"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}